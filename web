#!/usr/bin/env perl
use Mojolicious::Lite;

use Encode qw(encode);
use File::Temp qw();
use Symbol qw(gensym);

use Capture::Tiny qw(capture);
use Mojo::File qw(path);

sub run_python {

  my $interp    = shift;
  my $py_unsafe = shift;

  my $temp_in = File::Temp->new;
  $temp_in->unlink_on_destroy(1);
  binmode($temp_in, ':encoding(UTF-8)');
  my $temp_in_fn = $temp_in->filename;

  my @cmd = ($interp, "--script=$temp_in_fn",
             '--prologue=prologue.py', '--epilogue=epilogue.py');

  path($temp_in_fn)->spurt(encode('UTF-8', $py_unsafe));

  my ($output, $error, $status) = capture {
    system(@cmd);
  };

  print STDOUT sprintf("[stdout omitted, length %d]\n", length $output);
  print STDERR sprintf(qq{[stderr: "$error"]\n});

  if ($status != 0) {
    printf STDERR "child exited with value %d\n", $status >> 8;
  }

  return $output;
}

plugin Config => {file => $ENV{HULKS_RECRUITING_CONFIG}};

get '/' => sub {
  my $c = shift;
  $c->render(template => 'index');
};

post '/run' => sub {
  my $c = shift;

  my $interpreter = $c->app->config->{sandbox}->{binary};
  my $py_unsafe = $c->param('code-input');

  my $response = run_python($interpreter, $py_unsafe);
  $c->render(text => $response);
};

app->max_request_size(app->config->{web}->{max_request_size});
app->start;
